---
- name: Leggi il docker-compose remoto
  ansible.builtin.stat:
    path: "{{ update_compose_remote_path }}"
  register: remote_file

- name: Leggi il file locale
  ansible.builtin.stat:
    path: "{{ update_compose_local_path }}"
  register: local_file
  delegate_to: localhost

- name: Controlla i contenuti e imposta variabili
  ansible.builtin.set_fact:
    contents_different: "{{ not remote_file.stat.exists or (remote_file.stat.checksum != local_file.stat.checksum) }}"

- name: Check su update forzato del docker-compose
  ansible.builtin.set_fact:
    should_update: "{{ force_update | default(false) | bool or contents_different }}"

- name: Sono diversi?
  ansible.builtin.debug:
    msg: "Files diversi: {{ contents_different }}. Aggiornamento forzato: {{ force_update | default(false) | bool }}. Procedo con l'aggiornamento: {{ should_update }}"

- name: Esegui azioni Docker se il file è stato copiato o è diverso o è forzato l'aggiornamento
  when: should_update
  block:
    - name: Esegui docker-compose down
      community.docker.docker_compose_v2:
        project_src: "{{ update_compose_project_path }}"
        state: absent
      when: remote_file.stat.exists

    - name: Copia il file docker-compose.yml se non esiste o è diverso
      ansible.builtin.copy:
        src: "{{ update_compose_local_path }}"
        dest: "{{ update_compose_remote_path }}"
        mode: '0644'
      when: contents_different

    - name: Esegui docker-compose pull
      community.docker.docker_compose_v2_pull:
        project_src: "{{ update_compose_project_path }}"

    - name: Esegui docker-compose up
      community.docker.docker_compose_v2:
        project_src: "{{ update_compose_project_path }}"
        state: present
